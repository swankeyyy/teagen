"""Create token table4s

Revision ID: df3a63579888
Revises: d6f1e065c844
Create Date: 2024-11-05 17:23:38.965792

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'df3a63579888'
down_revision: Union[str, None] = 'd6f1e065c844'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('accesstoken_id_key', 'accesstoken', type_='unique')
    op.create_unique_constraint(op.f('uq_accesstoken_id'), 'accesstoken', ['id'])
    op.drop_constraint('tea_id_key', 'tea', type_='unique')
    op.drop_constraint('tea_name_key', 'tea', type_='unique')
    op.create_unique_constraint(op.f('uq_tea_id'), 'tea', ['id'])
    op.create_unique_constraint(op.f('uq_tea_name'), 'tea', ['name'])
    op.drop_constraint('tea_country_id_key', 'tea_country', type_='unique')
    op.drop_constraint('tea_country_name_key', 'tea_country', type_='unique')
    op.create_unique_constraint(op.f('uq_tea_country_id'), 'tea_country', ['id'])
    op.create_unique_constraint(op.f('uq_tea_country_name'), 'tea_country', ['name'])
    op.drop_constraint('tea_type_id_key', 'tea_type', type_='unique')
    op.create_unique_constraint(op.f('uq_tea_type_id'), 'tea_type', ['id'])
    op.drop_constraint('user_id_key', 'user', type_='unique')
    op.create_unique_constraint(op.f('uq_user_id'), 'user', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_user_id'), 'user', type_='unique')
    op.create_unique_constraint('user_id_key', 'user', ['id'])
    op.drop_constraint(op.f('uq_tea_type_id'), 'tea_type', type_='unique')
    op.create_unique_constraint('tea_type_id_key', 'tea_type', ['id'])
    op.drop_constraint(op.f('uq_tea_country_name'), 'tea_country', type_='unique')
    op.drop_constraint(op.f('uq_tea_country_id'), 'tea_country', type_='unique')
    op.create_unique_constraint('tea_country_name_key', 'tea_country', ['name'])
    op.create_unique_constraint('tea_country_id_key', 'tea_country', ['id'])
    op.drop_constraint(op.f('uq_tea_name'), 'tea', type_='unique')
    op.drop_constraint(op.f('uq_tea_id'), 'tea', type_='unique')
    op.create_unique_constraint('tea_name_key', 'tea', ['name'])
    op.create_unique_constraint('tea_id_key', 'tea', ['id'])
    op.drop_constraint(op.f('uq_accesstoken_id'), 'accesstoken', type_='unique')
    op.create_unique_constraint('accesstoken_id_key', 'accesstoken', ['id'])
    # ### end Alembic commands ###
